name: ci-cd-pipeline

on:
  push:
    branches:
      - develop

permissions:
  id-token: write
  contents: read

env:
  SHA: ${{ github.sha }}
  ECR_REPOSITORY_NESTJS: 'hh-nestjs'
  DATABASE_CONNECTION: ${{ secrets.DATABASE_CONNECTION }}
  DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
  DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
  DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}

jobs:
  test:
    name: test nestjs
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ env.DATABASE_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ env.DATABASE_NAME }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: checkout
        uses: actions/checkout@v4.0.0

      - name: setup node
        uses: actions/setup-node@v3.8.1
        with:
          node-version: '18'
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v3.3.2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: install dependencies
        run: npm install

      - name: Debug Database Connection
        run: |
          apt-get update
          apt-get install -y postgresql-client
          psql -h postgres -U ${{ env.DATABASE_USERNAME }} -d ${{ env.DATABASE_NAME }} -c 'SELECT 1'

      - name: run lint
        run: npm run lint

      - name: run tests
        run: npm run test

      - name: run e2e tests
        run: npm run test:e2e

      - name: Notify Result to Slack
        uses: 8398a7/action-slack@v3.15.1
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: ${{ github.actor }}
          channel: ${{ secrets.SLACK_CHANNEL }}
          username: ${{ secrets.SLACK_USERNAME }}
          text: 'Tests failed! :x:'
        env: 
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}